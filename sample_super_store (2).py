# -*- coding: utf-8 -*-
"""Sample_Super_store.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1FJ2I83_ktZxlBhaHhXOAjiJC0nIGwRbC
"""

import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
import numpy as np

#This data set is from a store, it shows the sales of products for the store. This analysis will try to extract insights from the data set.

df = pd.read_csv("Sample - Superstore.csv", encoding='ISO-8859-1')
df.head()

df.info()

df.isnull().sum()

df['Customer ID'].unique()

df.head()

#Category of products sold with their respective quantities. From the chart, it is recommended that the store stocks up
#more of office supplies as it has a higher percentage in terms of sales.

sum_category = df.groupby('Category')[['Quantity', 'Sales', 'Profit']].sum().reset_index()
print(sum_category)

labels = sum_category['Category']
sizes = sum_category['Quantity']

def autopct_format(pct):
    total = sum(sizes)
    val = int(round(pct * total / 100))
    return f'{pct:.1f}%\n({val})'

plt.pie(sizes, labels=labels, autopct=autopct_format, startangle=90)
plt.title('Quantity Sold by Category')
plt.axis('equal')
plt.tight_layout()
plt.show()

df.head()

#We want to know what product people buy the most.
sum_of_product_categories = df.groupby('Sub-Category')[['Quantity', 'Sales', 'Profit']].sum().reset_index()
print(sum_of_product_categories)

x = sum_of_product_categories['Sub-Category']
y = sum_of_product_categories['Quantity']
plt.bar(x,y, color = 'Red')
plt.xticks(rotation = 90)
plt.title('Products sold by category')
plt.xlabel('Sub-Category')
plt.ylabel('Quantity Sold')
plt.show()

df.head()

df.info()

#Total Sales

x = sum_of_product_categories['Sub-Category']
y = sum_of_product_categories['Sales']
plt.bar(x,y, color = 'purple')
plt.xticks(rotation = 90)
plt.title('Sales by category')
plt.xlabel('Sub-Category')
plt.ylabel('Total Sales')
plt.show()

x = sum_of_product_categories['Sub-Category']
y = sum_of_product_categories['Profit']
plt.bar(x,y, color = 'Grey')
plt.xticks(rotation = 90)
plt.title('Profits by category')
plt.xlabel('Sub-Category')
plt.ylabel('Profit')
plt.show()

df.head()

labels = sum_category['Category']
sizes = sum_category['Sales']

def autopct_format(pct):
    total = sum(sizes)
    val = int(round(pct * total / 100))
    return f'{pct:.1f}%\n({val})'

plt.pie(sizes, labels=labels, autopct=autopct_format, startangle=90)
plt.title('Sales by Category')
plt.axis('equal')
plt.tight_layout()
plt.show()

labels = sum_category['Category']
sizes = sum_category['Profit']

def autopct_format(pct):
    total = sum(sizes)
    val = int(round(pct * total / 100))
    return f'{pct:.1f}%\n({val})'

plt.pie(sizes, labels=labels, autopct=autopct_format, startangle=90)
plt.title('Profits Sold by Category')
plt.axis('equal')
plt.tight_layout()
plt.show()

Average_sales = df.groupby('Category')['Sales'].mean().reset_index()
print(Average_sales)
sns.boxplot (x = "Category", y = "Sales", data = Average_sales)
plt.show()

